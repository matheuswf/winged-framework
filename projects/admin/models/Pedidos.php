<?phpuse Winged\Model\Model;use Winged\Date\Date;/** * Class Pedidos */class Pedidos extends Model{    public function __construct()    {        parent::__construct();        return $this;    }    /** @var $id_pedido integer */    public $id_pedido;    /** @var $id_usuario integer */    public $id_usuario;    /** @var $id_cliente integer */    public $id_cliente;    /** @var $valor_frete integer */    public $valor_frete;    /** @var $possui_frete integer */    public $possui_frete;    /** @var $status integer */    public $status;    /** @var $endereco string */    public $endereco;    /** @var $agendamento string */    public $agendamento;    /** @var $data_cadastro string */    public $data_cadastro;    /** @var $data_alteracao string */    public $data_alteracao;    /** @var $metodo_pagamento string */    public $metodo_pagamento;    /** @var $observacoes string */    public $observacoes;    /** @var $id_bairro string */    public $id_bairro;    /** @var $innf string */    public $innf;    /**     * @return string     */    public static function tableName()    {        return "pedidos";    }    /**     * @return string     */    public static function primaryKeyName()    {        return "id_pedido";    }    /**     * @param bool $pk     *     * @return $this|int|Model     */    public function primaryKey($pk = false)    {        if ($pk && (is_int($pk) || intval($pk) != 0)) {            $this->id_pedido = $pk;            return $this;        }        return $this->id_pedido;    }    /**     * @return array     */    public function behaviors()    {        return [];    }    /**     * @return array     */    public function reverseBehaviors()    {        return [            'agendamento' => function () {                return $this->agendamento == '' ? (new Date())->custom('%d/%m/%Y %H:%M') : (new Date($this->agendamento))->custom('%d/%m/%Y %H:%M');            },            'data_cadastro' => (new Date($this->data_cadastro))->dmy(),            'data_alteracao' => (new Date($this->data_alteracao))->dmy(),        ];    }    /**     * @return array     */    public function labels()    {        return [];    }    /**     * @return array     */    public function rules()    {        return [];    }    /**     * @return array     */    public function messages()    {        return [];    }    /**     * @return string     */    public function getStatus()    {        switch ($this->status) {            case 1:                return 'Aguardando separação.';                break;            case 2:                return 'Encaminhado.';                break;            case 3:                return 'Entregue.';                break;            case 4:                return 'Cancelado.';                break;            default:                return 'Aguardando separação.';                break;        }    }    /**     * @return string     */    public function getStatusColor()    {        switch ($this->status) {            case 1:                return 'info';                break;            case 2:                return 'info';                break;            case 3:                return 'success';                break;            case 4:                return 'danger';                break;            default:                return 'info';                break;        }    }}