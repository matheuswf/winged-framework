<?phpuse Winged\Controller\Controller;use Winged\Winged;use Winged\Http\Session;use Winged\Http\Cookie;use Winged\Model\Login;use Winged\Database\CurrentDB;use Winged\Model\News;use Winged\Database\DbDict;function prepareMultipleUpdate($primaryKeyName, $tableName, $entryTuple){    $str = 'UPDATE ' . $tableName . ' SET ';    if (is_array($entryTuple) && is_string($primaryKeyName)) {        if (array_key_exists(0, $entryTuple)) {            if (array_key_exists($primaryKeyName, $entryTuple[0])) {                $fields = [];                foreach ($entryTuple[0] as $key => $value) {                    if ($key !== $primaryKeyName) {                        $fields[] = $key;                    }                }                $first_run = true;                $in_stmt = [];                foreach ($fields as $field_order => $field) {                    if ($first_run) {                        $str .= $field . ' = CASE ';                    } else {                        $str .= ', ' . $field . ' = CASE ';                    }                    foreach ($entryTuple as $key => $result) {                        $value = $result[$field];                        if (!intval($result[$field]) > 0 || !floatval($result[$field]) > 0) {                            $value = '"' . $value . '"';                        }                        $str .= 'WHEN ' . $primaryKeyName . ' = ' . $result[$primaryKeyName] . ' THEN ' . $value . ' ';                        if ($first_run) {                            $in_stmt[] = $result[$primaryKeyName];                        }                    }                    $first_run = false;                    $str .= 'ELSE ' . $field . ' END';                }                $str .= ' WHERE ' . $primaryKeyName . ' IN (' . join(', ', $in_stmt) . ')';                return $str;            }        }    }    return false;}class NewsController extends Controller{    public function __construct()    {        !Login::permission() ? $this->redirectTo() : null;        parent::__construct();        $this->dynamic('active_page_group', 'news');        $this->dynamic('page_name', 'News');        $this->dynamic('page_action_string', 'Listando');        $this->dynamic('list', 'news/');        $this->dynamic('insert', 'news/insert/');        $this->dynamic('update', 'news/update/');    }    public function actionIndex()    {        $this->redirectTo(Winged::$page_surname . '/page/1');    }    public function actionReorder()    {        $post = $_POST;        if (array_key_exists('id_new', $post)) {            $loaded = [];            for ($x = 0; $x < count($post['id_new']); $x++) {                $loaded[] = [                    'id_new' => $post['id_new'][$x],                    'ordem' => $post['ordem'][$x],                ];            }            $str = prepareMultipleUpdate('id_new', 'news', $loaded);            CurrentDb::execute($str);        }    }    public function actionPage()    {        AdminAssets::init($this);        $this->setNicknamesToUri(['page']);        $limit = get('limit') ? get('limit') : 10;        $page = uri('page') ? uri('page') : 1;        $model = new News();        $success = null;        if (!in_array(Session::get('action'), ['insert', 'update']) && Session::get('action') !== false) {            $success = $model->findOne(Session::get('action'));        }        $success = false;        if (intval(Session::get('action')) > 0) {            $success = true;        }        Session::remove('action');        $links = 1;        $model->select(['NEWS.*'])            ->from(['NEWS' => 'news'])            ->orderBy(ELOQUENT_ASC, 'NEWS.ordem');        Admin::buildSearchModel($model, [            'NEWS.categorias',            'NEWS.data_alteracao',            'NEWS.data_cadastro',            'NEWS.previa',            'NEWS.og_title',            'NEWS.og_description',            'NEWS.post',            'NEWS.titulo',        ]);        Admin::buildOrderModel($model, [            'sort_titulo' => 'NEWS.titulo',            'sort_categoria' => 'CATEGORIAS.estado',            'sort_previa' => 'NEWS.previa',            'sort_data_cadastro' => 'NEWS.data_cadastro',            'sort_data_alteracao' => 'NEWS.data_alteracao',            'sort_og_title' => 'NEWS.og_title',        ]);        $paginate = new Paginate($model->count(), $model);        $data = $paginate->getData($limit, $page);        $links = $paginate->createLinks($links, Winged::$page_surname);        $this->appendJs('news', Winged::$parent . 'assets/js/pages/news.js');        $this->html(Winged::$page_surname . '/' . Winged::$page_surname . '/_index', [            'success' => $success,            'models' => $data->data,            'links' => $links,        ]);    }    public function actionInsert()    {        AdminAssets::init($this);        $this->appendJs('news', Winged::$parent . 'assets/js/pages/news.js');        $this->dynamic('page_action_string', 'Inserindo');        $model = new News();        Session::always('action', 'insert');        if (is_get()) {            $this->html(Winged::$page_surname . '/' . Winged::$page_surname . '/_form', [                'model' => $model            ]);        } else if (is_post()) {            $save = $this->save();            if (!$save['status']) {                $this->html(Winged::$page_surname . '/' . Winged::$page_surname . '/_form', [                    'model' => $save['model'],                ]);            }        }    }    public function actionDelete()    {        $model = new News();        $this->setNicknamesToUri(['id']);        if (uri('id') !== false && is_get()) {            if ($model->autoLoadDb(uri('id'))) {                if ($model->getImagemPath()) {                    unlink($model->getImagemPath());                }                if ($model->getImagemPath('og_imagem')) {                    unlink($model->getImagemPath('og_imagem'));                }                $model->remove();            }        }        if (($to = Cookie::get('from_url'))) {            Cookie::remove('from_url');            $this->redirectOnly($to);        } else {            $this->redirectTo(Winged::$page_surname);        }    }    public function actionUpdate()    {        AdminAssets::init($this);        $this->appendJs('news', Winged::$parent . 'assets/js/pages/news.js');        $this->dynamic('page_action_string', 'Alterando');        $model = new News();        $this->setNicknamesToUri(['id']);        Session::always('action', 'update');        if (uri('id') !== false && is_get()) {            $model->autoLoadDb(uri('id'));            if ($model->primaryKey()) {                $this->html(Winged::$page_surname . '/' . Winged::$page_surname . '/_form', [                    'model' => $model                ]);            } else {                if (($to = Cookie::get('from_url'))) {                    Cookie::remove('from_url');                    $this->redirectOnly($to);                } else {                    $this->redirectTo(Winged::$page_surname);                }            }        } else if (is_post()) {            $save = $this->save();            if (!$save['status']) {                $this->html(Winged::$page_surname . '/' . Winged::$page_surname . '/_form', [                    'model' => $save['model'],                ]);            }        }    }    public function save()    {        if (Admin::isUpdate()) {            $model = new News();            $model->autoLoadDb($_POST[get_class($model)]['id_new'], false);            $model->categorias = [];            $model->load($_POST);        } else {            $last = (new News())->select()                ->from(['N' => News::tableName()])                ->orderBy(ELOQUENT_ASC, 'N.ordem')                ->execute();            $updates = [];            if($last){                foreach ($last as $mod) {                    $updates[] = [                        'id_new' => $mod->primaryKey(),                        'ordem' => $mod->ordem + 1,                    ];                }                $str = prepareMultipleUpdate('id_new', 'news', $updates);                CurrentDb::execute($str);            }            $post = $_POST;            $post[get_class((new News()))]['ordem'] = 1;            $model = (new News())->load($post);        }        if ($model->validate() && ($id = $model->save())) {            $action = Session::get('action');            Session::always('action', $id);            if (($to = Cookie::get('from_url')) && $action == 'update') {                Cookie::remove('from_url');                $this->redirectOnly($to);            } else {                $this->redirectTo(Winged::$page_surname);            }        } else {            return ['status' => false, 'model' => $model];        }    }}